*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 14.04.2020 at 10:30:23
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZESS_0023_V_AEDU................................*
FORM GET_DATA_ZESS_0023_V_AEDU.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZESS_0023_T_AEDU WHERE
(VIM_WHERETAB) .
    CLEAR ZESS_0023_V_AEDU .
ZESS_0023_V_AEDU-MANDT =
ZESS_0023_T_AEDU-MANDT .
ZESS_0023_V_AEDU-ADDEDUID =
ZESS_0023_T_AEDU-ADDEDUID .
ZESS_0023_V_AEDU-ADDEDU_TEXT =
ZESS_0023_T_AEDU-ADDEDU_TEXT .
<VIM_TOTAL_STRUC> = ZESS_0023_V_AEDU.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZESS_0023_V_AEDU .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZESS_0023_V_AEDU.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZESS_0023_V_AEDU-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZESS_0023_T_AEDU WHERE
  ADDEDUID = ZESS_0023_V_AEDU-ADDEDUID .
    IF SY-SUBRC = 0.
    DELETE ZESS_0023_T_AEDU .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZESS_0023_T_AEDU WHERE
  ADDEDUID = ZESS_0023_V_AEDU-ADDEDUID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZESS_0023_T_AEDU.
    ENDIF.
ZESS_0023_T_AEDU-MANDT =
ZESS_0023_V_AEDU-MANDT .
ZESS_0023_T_AEDU-ADDEDUID =
ZESS_0023_V_AEDU-ADDEDUID .
ZESS_0023_T_AEDU-ADDEDU_TEXT =
ZESS_0023_V_AEDU-ADDEDU_TEXT .
    IF SY-SUBRC = 0.
    UPDATE ZESS_0023_T_AEDU .
    ELSE.
    INSERT ZESS_0023_T_AEDU .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZESS_0023_V_AEDU-UPD_FLAG,
STATUS_ZESS_0023_V_AEDU-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZESS_0023_V_AEDU.
  SELECT SINGLE * FROM ZESS_0023_T_AEDU WHERE
ADDEDUID = ZESS_0023_V_AEDU-ADDEDUID .
ZESS_0023_V_AEDU-MANDT =
ZESS_0023_T_AEDU-MANDT .
ZESS_0023_V_AEDU-ADDEDUID =
ZESS_0023_T_AEDU-ADDEDUID .
ZESS_0023_V_AEDU-ADDEDU_TEXT =
ZESS_0023_T_AEDU-ADDEDU_TEXT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZESS_0023_V_AEDU USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZESS_0023_V_AEDU-ADDEDUID TO
ZESS_0023_T_AEDU-ADDEDUID .
MOVE ZESS_0023_V_AEDU-MANDT TO
ZESS_0023_T_AEDU-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZESS_0023_T_AEDU'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZESS_0023_T_AEDU TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZESS_0023_T_AEDU'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZESS_0023_V_FEDU................................*
FORM GET_DATA_ZESS_0023_V_FEDU.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM T7RUOKIN WHERE
    MOLGA EQ '33' AND
    SPRSL EQ 'RU' AND
    FACET EQ '33' AND
(VIM_WHERETAB) .
    CLEAR ZESS_0023_V_FEDU .
ZESS_0023_V_FEDU-MANDT =
T7RUOKIN-MANDT .
ZESS_0023_V_FEDU-MOLGA =
T7RUOKIN-MOLGA .
ZESS_0023_V_FEDU-SPRSL =
T7RUOKIN-SPRSL .
ZESS_0023_V_FEDU-FACET =
T7RUOKIN-FACET .
ZESS_0023_V_FEDU-CCODE =
T7RUOKIN-CCODE .
ZESS_0023_V_FEDU-CNAME =
T7RUOKIN-CNAME .
<VIM_TOTAL_STRUC> = ZESS_0023_V_FEDU.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZESS_0023_V_FEDU .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZESS_0023_V_FEDU.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZESS_0023_V_FEDU-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM T7RUOKIN WHERE
  MOLGA = ZESS_0023_V_FEDU-MOLGA AND
  SPRSL = ZESS_0023_V_FEDU-SPRSL AND
  FACET = ZESS_0023_V_FEDU-FACET AND
  CCODE = ZESS_0023_V_FEDU-CCODE .
    IF SY-SUBRC = 0.
    DELETE T7RUOKIN .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM T7RUOKIN WHERE
  MOLGA = ZESS_0023_V_FEDU-MOLGA AND
  SPRSL = ZESS_0023_V_FEDU-SPRSL AND
  FACET = ZESS_0023_V_FEDU-FACET AND
  CCODE = ZESS_0023_V_FEDU-CCODE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR T7RUOKIN.
    ENDIF.
T7RUOKIN-MANDT =
ZESS_0023_V_FEDU-MANDT .
T7RUOKIN-MOLGA =
ZESS_0023_V_FEDU-MOLGA .
T7RUOKIN-SPRSL =
ZESS_0023_V_FEDU-SPRSL .
T7RUOKIN-FACET =
ZESS_0023_V_FEDU-FACET .
T7RUOKIN-CCODE =
ZESS_0023_V_FEDU-CCODE .
T7RUOKIN-CNAME =
ZESS_0023_V_FEDU-CNAME .
    IF SY-SUBRC = 0.
    UPDATE T7RUOKIN .
    ELSE.
    INSERT T7RUOKIN .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZESS_0023_V_FEDU-UPD_FLAG,
STATUS_ZESS_0023_V_FEDU-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZESS_0023_V_FEDU.
  SELECT SINGLE * FROM T7RUOKIN WHERE
MOLGA = ZESS_0023_V_FEDU-MOLGA AND
SPRSL = ZESS_0023_V_FEDU-SPRSL AND
FACET = ZESS_0023_V_FEDU-FACET AND
CCODE = ZESS_0023_V_FEDU-CCODE .
ZESS_0023_V_FEDU-MANDT =
T7RUOKIN-MANDT .
ZESS_0023_V_FEDU-MOLGA =
T7RUOKIN-MOLGA .
ZESS_0023_V_FEDU-SPRSL =
T7RUOKIN-SPRSL .
ZESS_0023_V_FEDU-FACET =
T7RUOKIN-FACET .
ZESS_0023_V_FEDU-CCODE =
T7RUOKIN-CCODE .
ZESS_0023_V_FEDU-CNAME =
T7RUOKIN-CNAME .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZESS_0023_V_FEDU USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZESS_0023_V_FEDU-MOLGA TO
T7RUOKIN-MOLGA .
MOVE ZESS_0023_V_FEDU-SPRSL TO
T7RUOKIN-SPRSL .
MOVE ZESS_0023_V_FEDU-FACET TO
T7RUOKIN-FACET .
MOVE ZESS_0023_V_FEDU-CCODE TO
T7RUOKIN-CCODE .
MOVE ZESS_0023_V_FEDU-MANDT TO
T7RUOKIN-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'T7RUOKIN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN T7RUOKIN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'T7RUOKIN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZESS_0023_V_LEDU................................*
FORM GET_DATA_ZESS_0023_V_LEDU.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTHR_EDU_PROGRAM WHERE
(VIM_WHERETAB) .
    CLEAR ZESS_0023_V_LEDU .
ZESS_0023_V_LEDU-MANDT =
ZTHR_EDU_PROGRAM-MANDT .
ZESS_0023_V_LEDU-ID =
ZTHR_EDU_PROGRAM-ID .
ZESS_0023_V_LEDU-IS_OLD =
ZTHR_EDU_PROGRAM-IS_OLD .
    SELECT SINGLE * FROM ZTHR_EDU_PROGRAT WHERE
ID = ZTHR_EDU_PROGRAM-ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZESS_0023_V_LEDU-NAME =
ZTHR_EDU_PROGRAT-NAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZESS_0023_V_LEDU.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZESS_0023_V_LEDU .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZESS_0023_V_LEDU.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZESS_0023_V_LEDU-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAM WHERE
  ID = ZESS_0023_V_LEDU-ID .
    IF SY-SUBRC = 0.
    DELETE ZTHR_EDU_PROGRAM .
    ENDIF.
    DELETE FROM ZTHR_EDU_PROGRAT WHERE
    ID = ZTHR_EDU_PROGRAM-ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAM WHERE
  ID = ZESS_0023_V_LEDU-ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTHR_EDU_PROGRAM.
    ENDIF.
ZTHR_EDU_PROGRAM-MANDT =
ZESS_0023_V_LEDU-MANDT .
ZTHR_EDU_PROGRAM-ID =
ZESS_0023_V_LEDU-ID .
ZTHR_EDU_PROGRAM-IS_OLD =
ZESS_0023_V_LEDU-IS_OLD .
    IF SY-SUBRC = 0.
    UPDATE ZTHR_EDU_PROGRAM .
    ELSE.
    INSERT ZTHR_EDU_PROGRAM .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAT WHERE
    ID = ZTHR_EDU_PROGRAM-ID AND
    LANG = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTHR_EDU_PROGRAT.
ZTHR_EDU_PROGRAT-ID =
ZTHR_EDU_PROGRAM-ID .
ZTHR_EDU_PROGRAT-LANG =
SY-LANGU .
      ENDIF.
ZTHR_EDU_PROGRAT-NAME =
ZESS_0023_V_LEDU-NAME .
    IF SY-SUBRC = 0.
    UPDATE ZTHR_EDU_PROGRAT .
    ELSE.
    INSERT ZTHR_EDU_PROGRAT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZESS_0023_V_LEDU-UPD_FLAG,
STATUS_ZESS_0023_V_LEDU-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZESS_0023_V_LEDU.
  SELECT SINGLE * FROM ZTHR_EDU_PROGRAM WHERE
ID = ZESS_0023_V_LEDU-ID .
ZESS_0023_V_LEDU-MANDT =
ZTHR_EDU_PROGRAM-MANDT .
ZESS_0023_V_LEDU-ID =
ZTHR_EDU_PROGRAM-ID .
ZESS_0023_V_LEDU-IS_OLD =
ZTHR_EDU_PROGRAM-IS_OLD .
    SELECT SINGLE * FROM ZTHR_EDU_PROGRAT WHERE
ID = ZTHR_EDU_PROGRAM-ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZESS_0023_V_LEDU-NAME =
ZTHR_EDU_PROGRAT-NAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZESS_0023_V_LEDU-NAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZESS_0023_V_LEDU USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZESS_0023_V_LEDU-ID TO
ZTHR_EDU_PROGRAM-ID .
MOVE ZESS_0023_V_LEDU-MANDT TO
ZTHR_EDU_PROGRAM-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTHR_EDU_PROGRAM'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTHR_EDU_PROGRAM TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTHR_EDU_PROGRAM'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTHR_EDU_PROGRAM-ID TO
ZTHR_EDU_PROGRAT-ID .
MOVE SY-LANGU TO
ZTHR_EDU_PROGRAT-LANG .
MOVE ZESS_0023_V_LEDU-MANDT TO
ZTHR_EDU_PROGRAT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTHR_EDU_PROGRAT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTHR_EDU_PROGRAT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTHR_EDU_PROGRAT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZESS_0023_V_PEDU................................*
FORM GET_DATA_ZESS_0023_V_PEDU.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTHR_DLINET WHERE
(VIM_WHERETAB) .
    CLEAR ZESS_0023_V_PEDU .
ZESS_0023_V_PEDU-MANDT =
ZTHR_DLINET-MANDT .
ZESS_0023_V_PEDU-SPRAS =
ZTHR_DLINET-SPRAS .
ZESS_0023_V_PEDU-DLINE =
ZTHR_DLINET-DLINE .
ZESS_0023_V_PEDU-STEXT =
ZTHR_DLINET-STEXT .
<VIM_TOTAL_STRUC> = ZESS_0023_V_PEDU.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZESS_0023_V_PEDU .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZESS_0023_V_PEDU.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZESS_0023_V_PEDU-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_DLINET WHERE
  SPRAS = ZESS_0023_V_PEDU-SPRAS AND
  DLINE = ZESS_0023_V_PEDU-DLINE .
    IF SY-SUBRC = 0.
    DELETE ZTHR_DLINET .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_DLINET WHERE
  SPRAS = ZESS_0023_V_PEDU-SPRAS AND
  DLINE = ZESS_0023_V_PEDU-DLINE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTHR_DLINET.
    ENDIF.
ZTHR_DLINET-MANDT =
ZESS_0023_V_PEDU-MANDT .
ZTHR_DLINET-SPRAS =
ZESS_0023_V_PEDU-SPRAS .
ZTHR_DLINET-DLINE =
ZESS_0023_V_PEDU-DLINE .
ZTHR_DLINET-STEXT =
ZESS_0023_V_PEDU-STEXT .
    IF SY-SUBRC = 0.
    UPDATE ZTHR_DLINET .
    ELSE.
    INSERT ZTHR_DLINET .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZESS_0023_V_PEDU-UPD_FLAG,
STATUS_ZESS_0023_V_PEDU-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZESS_0023_V_PEDU.
  SELECT SINGLE * FROM ZTHR_DLINET WHERE
SPRAS = ZESS_0023_V_PEDU-SPRAS AND
DLINE = ZESS_0023_V_PEDU-DLINE .
ZESS_0023_V_PEDU-MANDT =
ZTHR_DLINET-MANDT .
ZESS_0023_V_PEDU-SPRAS =
ZTHR_DLINET-SPRAS .
ZESS_0023_V_PEDU-DLINE =
ZTHR_DLINET-DLINE .
ZESS_0023_V_PEDU-STEXT =
ZTHR_DLINET-STEXT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZESS_0023_V_PEDU USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZESS_0023_V_PEDU-SPRAS TO
ZTHR_DLINET-SPRAS .
MOVE ZESS_0023_V_PEDU-DLINE TO
ZTHR_DLINET-DLINE .
MOVE ZESS_0023_V_PEDU-MANDT TO
ZTHR_DLINET-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTHR_DLINET'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTHR_DLINET TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTHR_DLINET'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZESS_0023_V_REDU................................*
FORM GET_DATA_ZESS_0023_V_REDU.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZESS_T_REAS_ID WHERE
(VIM_WHERETAB) .
    CLEAR ZESS_0023_V_REDU .
ZESS_0023_V_REDU-MANDT =
ZESS_T_REAS_ID-MANDT .
ZESS_0023_V_REDU-REASON_ID =
ZESS_T_REAS_ID-REASON_ID .
    SELECT SINGLE * FROM ZESS_T_REAS_TXT WHERE
REASON_ID = ZESS_T_REAS_ID-REASON_ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZESS_0023_V_REDU-TEXT =
ZESS_T_REAS_TXT-TEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZESS_0023_V_REDU.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZESS_0023_V_REDU .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZESS_0023_V_REDU.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZESS_0023_V_REDU-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZESS_T_REAS_ID WHERE
  REASON_ID = ZESS_0023_V_REDU-REASON_ID .
    IF SY-SUBRC = 0.
    DELETE ZESS_T_REAS_ID .
    ENDIF.
    DELETE FROM ZESS_T_REAS_TXT WHERE
    REASON_ID = ZESS_T_REAS_ID-REASON_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZESS_T_REAS_ID WHERE
  REASON_ID = ZESS_0023_V_REDU-REASON_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZESS_T_REAS_ID.
    ENDIF.
ZESS_T_REAS_ID-MANDT =
ZESS_0023_V_REDU-MANDT .
ZESS_T_REAS_ID-REASON_ID =
ZESS_0023_V_REDU-REASON_ID .
    IF SY-SUBRC = 0.
    UPDATE ZESS_T_REAS_ID .
    ELSE.
    INSERT ZESS_T_REAS_ID .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZESS_T_REAS_TXT WHERE
    REASON_ID = ZESS_T_REAS_ID-REASON_ID AND
    LANG = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZESS_T_REAS_TXT.
ZESS_T_REAS_TXT-REASON_ID =
ZESS_T_REAS_ID-REASON_ID .
ZESS_T_REAS_TXT-LANG =
SY-LANGU .
      ENDIF.
ZESS_T_REAS_TXT-TEXT =
ZESS_0023_V_REDU-TEXT .
    IF SY-SUBRC = 0.
    UPDATE ZESS_T_REAS_TXT .
    ELSE.
    INSERT ZESS_T_REAS_TXT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZESS_0023_V_REDU-UPD_FLAG,
STATUS_ZESS_0023_V_REDU-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZESS_0023_V_REDU.
  SELECT SINGLE * FROM ZESS_T_REAS_ID WHERE
REASON_ID = ZESS_0023_V_REDU-REASON_ID .
ZESS_0023_V_REDU-MANDT =
ZESS_T_REAS_ID-MANDT .
ZESS_0023_V_REDU-REASON_ID =
ZESS_T_REAS_ID-REASON_ID .
    SELECT SINGLE * FROM ZESS_T_REAS_TXT WHERE
REASON_ID = ZESS_T_REAS_ID-REASON_ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZESS_0023_V_REDU-TEXT =
ZESS_T_REAS_TXT-TEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZESS_0023_V_REDU-TEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZESS_0023_V_REDU USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZESS_0023_V_REDU-REASON_ID TO
ZESS_T_REAS_ID-REASON_ID .
MOVE ZESS_0023_V_REDU-MANDT TO
ZESS_T_REAS_ID-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZESS_T_REAS_ID'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZESS_T_REAS_ID TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZESS_T_REAS_ID'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZESS_T_REAS_ID-REASON_ID TO
ZESS_T_REAS_TXT-REASON_ID .
MOVE SY-LANGU TO
ZESS_T_REAS_TXT-LANG .
MOVE ZESS_0023_V_REDU-MANDT TO
ZESS_T_REAS_TXT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZESS_T_REAS_TXT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZESS_T_REAS_TXT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZESS_T_REAS_TXT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVHR_EDU_PROGRAM................................*
FORM GET_DATA_ZVHR_EDU_PROGRAM.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTHR_EDU_PROGRAM WHERE
(VIM_WHERETAB) .
    CLEAR ZVHR_EDU_PROGRAM .
ZVHR_EDU_PROGRAM-MANDT =
ZTHR_EDU_PROGRAM-MANDT .
ZVHR_EDU_PROGRAM-ID =
ZTHR_EDU_PROGRAM-ID .
ZVHR_EDU_PROGRAM-IS_OLD =
ZTHR_EDU_PROGRAM-IS_OLD .
    SELECT SINGLE * FROM ZTHR_EDU_PROGRAT WHERE
ID = ZTHR_EDU_PROGRAM-ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVHR_EDU_PROGRAM-NAME =
ZTHR_EDU_PROGRAT-NAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVHR_EDU_PROGRAM.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVHR_EDU_PROGRAM .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVHR_EDU_PROGRAM.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVHR_EDU_PROGRAM-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAM WHERE
  ID = ZVHR_EDU_PROGRAM-ID .
    IF SY-SUBRC = 0.
    DELETE ZTHR_EDU_PROGRAM .
    ENDIF.
    DELETE FROM ZTHR_EDU_PROGRAT WHERE
    ID = ZTHR_EDU_PROGRAM-ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAM WHERE
  ID = ZVHR_EDU_PROGRAM-ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTHR_EDU_PROGRAM.
    ENDIF.
ZTHR_EDU_PROGRAM-MANDT =
ZVHR_EDU_PROGRAM-MANDT .
ZTHR_EDU_PROGRAM-ID =
ZVHR_EDU_PROGRAM-ID .
ZTHR_EDU_PROGRAM-IS_OLD =
ZVHR_EDU_PROGRAM-IS_OLD .
    IF SY-SUBRC = 0.
    UPDATE ZTHR_EDU_PROGRAM .
    ELSE.
    INSERT ZTHR_EDU_PROGRAM .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTHR_EDU_PROGRAT WHERE
    ID = ZTHR_EDU_PROGRAM-ID AND
    LANG = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTHR_EDU_PROGRAT.
ZTHR_EDU_PROGRAT-ID =
ZTHR_EDU_PROGRAM-ID .
ZTHR_EDU_PROGRAT-LANG =
SY-LANGU .
      ENDIF.
ZTHR_EDU_PROGRAT-NAME =
ZVHR_EDU_PROGRAM-NAME .
    IF SY-SUBRC = 0.
    UPDATE ZTHR_EDU_PROGRAT .
    ELSE.
    INSERT ZTHR_EDU_PROGRAT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVHR_EDU_PROGRAM-UPD_FLAG,
STATUS_ZVHR_EDU_PROGRAM-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVHR_EDU_PROGRAM.
  SELECT SINGLE * FROM ZTHR_EDU_PROGRAM WHERE
ID = ZVHR_EDU_PROGRAM-ID .
ZVHR_EDU_PROGRAM-MANDT =
ZTHR_EDU_PROGRAM-MANDT .
ZVHR_EDU_PROGRAM-ID =
ZTHR_EDU_PROGRAM-ID .
ZVHR_EDU_PROGRAM-IS_OLD =
ZTHR_EDU_PROGRAM-IS_OLD .
    SELECT SINGLE * FROM ZTHR_EDU_PROGRAT WHERE
ID = ZTHR_EDU_PROGRAM-ID AND
LANG = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVHR_EDU_PROGRAM-NAME =
ZTHR_EDU_PROGRAT-NAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVHR_EDU_PROGRAM-NAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVHR_EDU_PROGRAM USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVHR_EDU_PROGRAM-ID TO
ZTHR_EDU_PROGRAM-ID .
MOVE ZVHR_EDU_PROGRAM-MANDT TO
ZTHR_EDU_PROGRAM-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTHR_EDU_PROGRAM'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTHR_EDU_PROGRAM TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTHR_EDU_PROGRAM'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTHR_EDU_PROGRAM-ID TO
ZTHR_EDU_PROGRAT-ID .
MOVE SY-LANGU TO
ZTHR_EDU_PROGRAT-LANG .
MOVE ZVHR_EDU_PROGRAM-MANDT TO
ZTHR_EDU_PROGRAT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTHR_EDU_PROGRAT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTHR_EDU_PROGRAT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTHR_EDU_PROGRAT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
